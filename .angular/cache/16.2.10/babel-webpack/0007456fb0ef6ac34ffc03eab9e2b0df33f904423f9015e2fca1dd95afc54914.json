{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = 'http://localhost:3000/items';\nexport class ItemService {\n  constructor(http) {\n    this.http = http;\n  }\n  getItems() {\n    return this.http.get(API_URL);\n  }\n  getItemsByEvaluation(evaId) {\n    console.log(`Solicitud para obtener items de la evaluación ID ${evaId}`);\n    return this.http.get(`${API_URL}/${evaId}`);\n  }\n  getItem(id) {\n    return this.http.get(`${API_URL}/detalle/${id}`);\n  }\n  addItem() {\n    this.itemService.addItem(this.newItem).subscribe(response => {\n      console.log('Item added', response);\n    }, error => {\n      console.error('Error adding item', error);\n    });\n  }\n  editItem(id, item) {\n    return this.http.put(`${API_URL}/editar/${id}`, item);\n  }\n  deleteItem(id) {\n    return this.http.delete(`${API_URL}/eliminar/${id}`);\n  }\n  static #_ = this.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API_URL","ItemService","constructor","http","getItems","get","getItemsByEvaluation","evaId","console","log","getItem","id","addItem","itemService","newItem","subscribe","response","error","editItem","item","put","deleteItem","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Proyectos\\pryAutoEvaluacion\\src\\app\\item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:3000/items';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ItemService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getItems(): Observable<any> {\r\n    return this.http.get(API_URL);\r\n  }\r\n\r\n  getItemsByEvaluation(evaId: number): Observable<any> {\r\n    console.log(`Solicitud para obtener items de la evaluación ID ${evaId}`);\r\n    return this.http.get(`${API_URL}/${evaId}`);\r\n  }\r\n\r\n  getItem(id: number): Observable<any> {\r\n    return this.http.get(`${API_URL}/detalle/${id}`);\r\n  }\r\n  addItem(): void {\r\n    this.itemService.addItem(this.newItem).subscribe(\r\n      (response) => {\r\n        console.log('Item added', response);\r\n      },\r\n      (error) => {\r\n        console.error('Error adding item', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  editItem(id: number, item: any): Observable<any> {\r\n    return this.http.put(`${API_URL}/editar/${id}`, item);\r\n  }\r\n\r\n  deleteItem(id: number): Observable<any> {\r\n    return this.http.delete(`${API_URL}/eliminar/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAIA,MAAMA,OAAO,GAAG,6BAA6B;AAK7C,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAACL,OAAO,CAAC;EAC/B;EAEAM,oBAAoBA,CAACC,KAAa;IAChCC,OAAO,CAACC,GAAG,CAAC,oDAAoDF,KAAK,EAAE,CAAC;IACxE,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,GAAGL,OAAO,IAAIO,KAAK,EAAE,CAAC;EAC7C;EAEAG,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAC,GAAGL,OAAO,YAAYW,EAAE,EAAE,CAAC;EAClD;EACAC,OAAOA,CAAA;IACL,IAAI,CAACC,WAAW,CAACD,OAAO,CAAC,IAAI,CAACE,OAAO,CAAC,CAACC,SAAS,CAC7CC,QAAQ,IAAI;MACXR,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEO,QAAQ,CAAC;IACrC,CAAC,EACAC,KAAK,IAAI;MACRT,OAAO,CAACS,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CACF;EACH;EAEAC,QAAQA,CAACP,EAAU,EAAEQ,IAAS;IAC5B,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,GAAGpB,OAAO,WAAWW,EAAE,EAAE,EAAEQ,IAAI,CAAC;EACvD;EAEAE,UAAUA,CAACV,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACmB,MAAM,CAAC,GAAGtB,OAAO,aAAaW,EAAE,EAAE,CAAC;EACtD;EAAC,QAAAY,CAAA,G;qBAhCUtB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX3B,WAAW;IAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}