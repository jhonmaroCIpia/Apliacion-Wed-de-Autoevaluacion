{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nconst API_URL = 'http://localhost:3000/items';\nexport class ItemService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      Authorization: token\n    });\n  }\n  getItems() {\n    return this.http.get(API_URL, {\n      headers: this.getHeaders()\n    });\n  }\n  getItemsByEvaluation(evaId) {\n    console.log(`Solicitud para obtener items de la evaluación ID ${evaId}`);\n    return this.http.get(`${API_URL}/${evaId}`, {\n      headers: this.getHeaders()\n    });\n  }\n  getItem(id) {\n    return this.http.get(`${API_URL}/detalle/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  addItem(item) {\n    return this.http.post(`${API_URL}/agregar`, item, {\n      headers: this.getHeaders()\n    });\n  }\n  editItem(id, item) {\n    return this.http.put(`${API_URL}/editar/${id}`, item, {\n      headers: this.getHeaders()\n    });\n  }\n  deleteItem(id) {\n    return this.http.delete(`${API_URL}/eliminar/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  static #_ = this.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","API_URL","ItemService","constructor","http","authService","getHeaders","token","getToken","Authorization","getItems","get","headers","getItemsByEvaluation","evaId","console","log","getItem","id","addItem","item","post","editItem","put","deleteItem","delete","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Proyectos\\pryAutoEvaluacion\\src\\app\\item.service.ts"],"sourcesContent":["// item.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst API_URL = 'http://localhost:3000/items';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ItemService {\r\n  constructor(private http: HttpClient, private authService: AuthService) { }\r\n\r\n  private getHeaders() {\r\n    const token = this.authService.getToken();\r\n    return new HttpHeaders({ Authorization: token });\r\n  }\r\n\r\n  getItems(): Observable<any> {\r\n    return this.http.get(API_URL, { headers: this.getHeaders() });\r\n  }\r\n\r\n  getItemsByEvaluation(evaId: number): Observable<any> {\r\n    console.log(`Solicitud para obtener items de la evaluación ID ${evaId}`);\r\n    return this.http.get(`${API_URL}/${evaId}`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  getItem(id: number): Observable<any> {\r\n    return this.http.get(`${API_URL}/detalle/${id}`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  addItem(item: any): Observable<any> {\r\n    return this.http.post(`${API_URL}/agregar`, item, { headers: this.getHeaders() });\r\n  }\r\n\r\n  editItem(id: number, item: any): Observable<any> {\r\n    return this.http.put(`${API_URL}/editar/${id}`, item, { headers: this.getHeaders() });\r\n  }\r\n\r\n  deleteItem(id: number): Observable<any> {\r\n    return this.http.delete(`${API_URL}/eliminar/${id}`, { headers: this.getHeaders() });\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAI9D,MAAMC,OAAO,GAAG,6BAA6B;AAK7C,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;EAAiB;EAElEC,UAAUA,CAAA;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;IACzC,OAAO,IAAIR,WAAW,CAAC;MAAES,aAAa,EAAEF;IAAK,CAAE,CAAC;EAClD;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAACV,OAAO,EAAE;MAAEW,OAAO,EAAE,IAAI,CAACN,UAAU;IAAE,CAAE,CAAC;EAC/D;EAEAO,oBAAoBA,CAACC,KAAa;IAChCC,OAAO,CAACC,GAAG,CAAC,oDAAoDF,KAAK,EAAE,CAAC;IACxE,OAAO,IAAI,CAACV,IAAI,CAACO,GAAG,CAAC,GAAGV,OAAO,IAAIa,KAAK,EAAE,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACN,UAAU;IAAE,CAAE,CAAC;EAC7E;EAEAW,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACd,IAAI,CAACO,GAAG,CAAC,GAAGV,OAAO,YAAYiB,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE,IAAI,CAACN,UAAU;IAAE,CAAE,CAAC;EAClF;EAEAa,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,GAAGpB,OAAO,UAAU,EAAEmB,IAAI,EAAE;MAAER,OAAO,EAAE,IAAI,CAACN,UAAU;IAAE,CAAE,CAAC;EACnF;EAEAgB,QAAQA,CAACJ,EAAU,EAAEE,IAAS;IAC5B,OAAO,IAAI,CAAChB,IAAI,CAACmB,GAAG,CAAC,GAAGtB,OAAO,WAAWiB,EAAE,EAAE,EAAEE,IAAI,EAAE;MAAER,OAAO,EAAE,IAAI,CAACN,UAAU;IAAE,CAAE,CAAC;EACvF;EAEAkB,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACd,IAAI,CAACqB,MAAM,CAAC,GAAGxB,OAAO,aAAaiB,EAAE,EAAE,EAAE;MAAEN,OAAO,EAAE,IAAI,CAACN,UAAU;IAAE,CAAE,CAAC;EACtF;EAAC,QAAAoB,CAAA,G;qBA/BUxB,WAAW,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX/B,WAAW;IAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}