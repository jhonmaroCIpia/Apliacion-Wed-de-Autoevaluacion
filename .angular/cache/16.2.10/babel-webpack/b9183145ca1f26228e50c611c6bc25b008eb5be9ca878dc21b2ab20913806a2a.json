{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = 'http://localhost:3000/items';\nexport class ItemService {\n  constructor(http) {\n    this.http = http;\n  }\n  getItems() {\n    return this.http.get(API_URL);\n  }\n  getItemsByEvaluation(evaId) {\n    console.log(`Solicitud para obtener items de la evaluación ID ${evaId}`);\n    return this.http.get(`${API_URL}/${evaId}`);\n  }\n  getItem(id) {\n    return this.http.get(`${API_URL}/detalle/${id}`);\n  }\n  addItem(item) {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return throwError('Token not provided!');\n    } else {\n      const headers = new HttpHeaders({\n        Authorization: token\n      });\n      return this.http.post(`${API_URL}/add`, item, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('Error en la solicitud para agregar un ítem:', error);\n        return throwError('Error in token: ' + error.message);\n      }));\n    }\n  }\n  editItem(id, item) {\n    return this.http.put(`${API_URL}/editar/${id}`, item);\n  }\n  deleteItem(id) {\n    return this.http.delete(`${API_URL}/eliminar/${id}`);\n  }\n  static #_ = this.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","API_URL","ItemService","constructor","http","getItems","get","getItemsByEvaluation","evaId","console","log","getItem","id","addItem","item","token","localStorage","headers","Authorization","post","pipe","error","message","editItem","put","deleteItem","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Proyectos\\pryAutoEvaluacion\\src\\app\\item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:3000/items';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ItemService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getItems(): Observable<any> {\r\n    return this.http.get(API_URL);\r\n  }\r\n\r\n  getItemsByEvaluation(evaId: number): Observable<any> {\r\n    console.log(`Solicitud para obtener items de la evaluación ID ${evaId}`);\r\n    return this.http.get(`${API_URL}/${evaId}`);\r\n  }\r\n\r\n  getItem(id: number): Observable<any> {\r\n    return this.http.get(`${API_URL}/detalle/${id}`);\r\n  }\r\n\r\n  addItem(item: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      return throwError('Token not provided!');\r\n    } else {\r\n      const headers = new HttpHeaders({ Authorization: token });\r\n\r\n      return this.http.post(`${API_URL}/add`, item, { headers }).pipe(\r\n        catchError((error: any) => {\r\n          console.error('Error en la solicitud para agregar un ítem:', error);\r\n          return throwError('Error in token: ' + error.message);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  editItem(id: number, item: any): Observable<any> {\r\n    return this.http.put(`${API_URL}/editar/${id}`, item);\r\n  }\r\n\r\n  deleteItem(id: number): Observable<any> {\r\n    return this.http.delete(`${API_URL}/eliminar/${id}`);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;AAEzD,MAAMC,OAAO,GAAG,6BAA6B;AAK7C,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAACL,OAAO,CAAC;EAC/B;EAEAM,oBAAoBA,CAACC,KAAa;IAChCC,OAAO,CAACC,GAAG,CAAC,oDAAoDF,KAAK,EAAE,CAAC;IACxE,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,GAAGL,OAAO,IAAIO,KAAK,EAAE,CAAC;EAC7C;EAEAG,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAC,GAAGL,OAAO,YAAYW,EAAE,EAAE,CAAC;EAClD;EAEAC,OAAOA,CAACC,IAAS;IACf,MAAMC,KAAK,GAAGC,YAAY,CAACL,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACI,KAAK,EAAE;MACV,OAAOf,UAAU,CAAC,qBAAqB,CAAC;KACzC,MAAM;MACL,MAAMiB,OAAO,GAAG,IAAInB,WAAW,CAAC;QAAEoB,aAAa,EAAEH;MAAK,CAAE,CAAC;MAEzD,OAAO,IAAI,CAACX,IAAI,CAACe,IAAI,CAAC,GAAGlB,OAAO,MAAM,EAAEa,IAAI,EAAE;QAAEG;MAAO,CAAE,CAAC,CAACG,IAAI,CAC7DrB,UAAU,CAAEsB,KAAU,IAAI;QACxBZ,OAAO,CAACY,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;QACnE,OAAOrB,UAAU,CAAC,kBAAkB,GAAGqB,KAAK,CAACC,OAAO,CAAC;MACvD,CAAC,CAAC,CACH;;EAEL;EAGAC,QAAQA,CAACX,EAAU,EAAEE,IAAS;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACoB,GAAG,CAAC,GAAGvB,OAAO,WAAWW,EAAE,EAAE,EAAEE,IAAI,CAAC;EACvD;EAEAW,UAAUA,CAACb,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACsB,MAAM,CAAC,GAAGzB,OAAO,aAAaW,EAAE,EAAE,CAAC;EACtD;EAAC,QAAAe,CAAA,G;qBAxCUzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}