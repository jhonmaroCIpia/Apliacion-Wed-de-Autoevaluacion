{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../item.service\";\nimport * as i3 from \"@angular/common\";\nfunction ItemListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.IEVA_ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.LAB_ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.IEVA_ACTO);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.IEVA_ESTADO);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.IEVA_PUNTAJE);\n  }\n}\nexport class ItemListComponent {\n  constructor(route, itemService) {\n    this.route = route;\n    this.itemService = itemService;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.evaId = +params['eva_id'];\n      this.loadItems();\n    });\n  }\n  loadItems() {\n    this.route.params.subscribe(params => {\n      this.evaId = +params['eva_id'];\n      this.itemService.getItemsByEvaluation(this.evaId).subscribe(data => {\n        this.items = data;\n      });\n    });\n  }\n  static #_ = this.ɵfac = function ItemListComponent_Factory(t) {\n    return new (t || ItemListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ItemService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ItemListComponent,\n    selectors: [[\"app-item-list\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function ItemListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n        i0.ɵɵtext(6, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"LAB_ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"IEVA_ACTO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"IEVA_ESTADO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"IEVA_PUNTAJE\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, ItemListComponent_tr_16_Template, 11, 5, \"tr\", 0);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Lista de \\u00CDtems de la Evaluaci\\u00F3n \", ctx.evaId, \"\");\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","IEVA_ID","LAB_ID","IEVA_ACTO","IEVA_ESTADO","IEVA_PUNTAJE","ItemListComponent","constructor","route","itemService","ngOnInit","params","subscribe","evaId","loadItems","getItemsByEvaluation","data","items","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ItemService","_2","selectors","decls","vars","consts","template","ItemListComponent_Template","rf","ctx","ɵɵtemplate","ItemListComponent_tr_16_Template","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["D:\\Proyectos\\pryAutoEvaluacion\\src\\app\\item-list\\item-list.component.ts","D:\\Proyectos\\pryAutoEvaluacion\\src\\app\\item-list\\item-list.component.html"],"sourcesContent":["// item-list.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ItemService } from '../item.service';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.css'],\n})\nexport class ItemListComponent implements OnInit {\n  items!: any[];\n  evaId!: number;\n\n  constructor(private route: ActivatedRoute, private itemService: ItemService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.evaId = +params['eva_id'];\n      this.loadItems();\n    });\n  }\n\n  loadItems(): void {\n    this.route.params.subscribe((params) => {\n      this.evaId = +params['eva_id'];\n      this.itemService.getItemsByEvaluation(this.evaId).subscribe((data) => {\n        this.items = data;\n      });\n    });\n  }\n}\n","<!-- item-list.component.html -->\r\n<h2>Lista de Ítems de la Evaluación {{ evaId }}</h2>\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>LAB_ID</th>\r\n      <th>IEVA_ACTO</th>\r\n      <th>IEVA_ESTADO</th>\r\n      <th>IEVA_PUNTAJE</th>\r\n      <!-- Agrega más columnas según tus atributos -->\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let item of items\">\r\n      <td>{{ item.IEVA_ID }}</td>\r\n      <td>{{ item.LAB_ID }}</td>\r\n      <td>{{ item.IEVA_ACTO }}</td>\r\n      <td>{{ item.IEVA_ESTADO }}</td>\r\n      <td>{{ item.IEVA_PUNTAJE }}</td>\r\n      <!-- Agrega más celdas según tus atributos -->\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}