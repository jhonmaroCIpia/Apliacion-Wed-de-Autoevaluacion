{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst API_URL = 'http://localhost:3000/auth/login';\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  login(email, password) {\n    return this.http.post(API_URL, {\n      email,\n      password\n    }).pipe(tap(response => {\n      console.log('Respuesta del servidor:', response);\n      console.log('Token recibido:', response.token);\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('rol', response.rol);\n      this.router.navigate(['/items/add']);\n    }, error => console.error('Error en la solicitud de inicio de sesión:', error)));\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  getRol() {\n    return localStorage.getItem('rol');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","API_URL","AuthService","constructor","http","router","login","email","password","post","pipe","response","console","log","token","localStorage","setItem","rol","navigate","error","getToken","getItem","getRol","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\Proyectos\\pryAutoEvaluacion\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nconst API_URL = 'http://localhost:3000/auth/login';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  login(email: string, password: string): Observable<any> {\r\n    return this.http.post(API_URL, { email, password }).pipe(\r\n      tap(\r\n        (response: any) => {\r\n          console.log('Respuesta del servidor:', response);\r\n          console.log('Token recibido:', response.token);\r\n          localStorage.setItem('token', response.token);\r\n          localStorage.setItem('rol', response.rol);\r\n          this.router.navigate(['/items/add']);\r\n        },\r\n        (error) => console.error('Error en la solicitud de inicio de sesión:', error)\r\n      )\r\n    );\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  getRol(): string | null {\r\n    return localStorage.getItem('rol');\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;;AAGtC,MAAMC,OAAO,GAAG,kCAAkC;AAKlD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/DC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACR,OAAO,EAAE;MAAEM,KAAK;MAAEC;IAAQ,CAAE,CAAC,CAACE,IAAI,CACtDV,GAAG,CACAW,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAAC;MAChDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAACG,KAAK,CAAC;MAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACG,KAAK,CAAC;MAC7CC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,QAAQ,CAACM,GAAG,CAAC;MACzC,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACAC,KAAK,IAAKP,OAAO,CAACO,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC,CAC9E,CACF;EACH;EAEAC,QAAQA,CAAA;IACN,OAAOL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,MAAMA,CAAA;IACJ,OAAOP,YAAY,CAACM,OAAO,CAAC,KAAK,CAAC;EACpC;EAAC,QAAAE,CAAA,G;qBAxBUrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX5B,WAAW;IAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}